name: Publishing

on:
    release:
        types:
        -   created

jobs:

    pypi-publish:
        name: PyPI
        runs-on: ubuntu-latest
        steps:
        -   name: Check out the repository
            uses: actions/checkout@v3
            with:
                fetch-depth: 2
        -   name: Set up Python
            uses: actions/setup-python@v4
            with:
                python-version: '3.9'
        -   name: Upgrade pip
            run: |
                pip install --upgrade pip
                pip --version
        -   name: Install Poetry
            run: |
                pip install poetry
                poetry --version
        -   name: Build package
            run: |
                poetry build --ansi
        -   name: Publish package on PyPI
            uses: pypa/gh-action-pypi-publish@v1.5.1
            with:
                user: __token__
                password: ${{ secrets.PYPI_TOKEN }}

    docker-hub-publish:
        name: docker-hub
        runs-on: ubuntu-latest
        steps:
        -   name: Check out the repository
            uses: actions/checkout@v3
            with:
                fetch-depth: 2
        -   name: Set up Python
            uses: actions/setup-python@v4
            with:
                python-version: '3.9'
        -   name: Upgrade pip
            run: |
                pip install --upgrade pip
                pip --version
        -   name: Install Poetry
            run: |
                pip install poetry
                poetry --version
        -   name: Set up QEMU
            uses: docker/setup-qemu-action@v1
        -   name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v1
        -   name: Login to DockerHub
            uses: docker/login-action@v2
            with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_TOKEN }}
        -   name: Declare Version Variable
            run: |
                PACKAGE_VERSION=$(poetry version --short)
                PACKAGE_NAME=$(poetry version | awk '{ print $1 }')
                echo PACKAGE_VERSION=${PACKAGE_VERSION} >> $GITHUB_ENV
                echo PACKAGE_NAME=${PACKAGE_NAME} >> $GITHUB_ENV
        -   name: Docker Image Building and Publishing
            id: docker_build
            uses: docker/build-push-action@v2
            with:
                push: true
                tags: juftin/${{ env.PACKAGE_NAME }}:latest,juftin/${{ env.PACKAGE_NAME }}:${{ env.PACKAGE_VERSION }}
