name: Publishing

on:
    release:
        types:
            - published
concurrency:
    group: ${{ github.workflow }}
jobs:
    pypi-publish:
        name: PyPI
        if: github.repository_owner == 'juftin'
        runs-on: ubuntu-latest
        environment:
            name: pypi
            url: https://pypi.org/p/camply
        permissions:
            id-token: write
        steps:
            - name: Check out the repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 2
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"
            - name: Install Hatch
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install -q hatch pre-commit
                  hatch --version
            - name: Build package
              run: |
                  hatch build
            - name: Publish package on PyPI
              uses: pypa/gh-action-pypi-publish@release/v1

    docker-hub-publish:
        name: docker-hub
        if: github.repository_owner == 'juftin'
        runs-on: ubuntu-latest
        steps:
            - name: Check out the repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 2
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"
            - name: Install Hatch
              run: |
                  python -m pip install -q --upgrade pip wheel
                  python -m pip install -q hatch pre-commit
                  hatch --version
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Login to DockerHub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}
            - name: Declare Version Variable
              run: |
                  PACKAGE_VERSION=$(hatch version)
                  PACKAGE_NAME=$(hatch project metadata | jq -r .name)
                  echo PACKAGE_VERSION=${PACKAGE_VERSION} >> $GITHUB_ENV
                  echo PACKAGE_NAME=${PACKAGE_NAME} >> $GITHUB_ENV
            - name: Docker Image Building and Publishing
              id: docker_build
              uses: docker/build-push-action@v5
              with:
                  push: true
                  tags: juftin/${{ env.PACKAGE_NAME }}:latest,juftin/${{ env.PACKAGE_NAME }}:${{ env.PACKAGE_VERSION }}
