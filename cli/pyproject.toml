[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [{name = "Justin Flannery", email = "justin.flannery@juftin.com"}]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Development Status :: 5 - Production/Stable",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12"
]
dependencies = [
  "click~=8.1.3",
  "fake-useragent~=1.4.0",
  "pandas>=2,<3",
  "pydantic~=1.10.13",
  "python-dotenv~=1.0.0",
  "pytz~=2023.2",
  "pyyaml~=6.0",
  "ratelimit~=2.2.1",
  "requests~=2.31.0",
  "rich~=13.3.2",
  "rich-click~=1.6.1",
  "tenacity~=8.2.2"
]
description = "camply, the campsite finder 🏕"
dynamic = ["version"]
keywords = ["recdotgov", "outdoors", "camping", "reservations", "national-parks"]
license = "MIT"
name = "camply"
readme = "README.md"
requires-python = ">=3.8,<4"

[project.optional-dependencies]
all = [
  "apprise~=1.3.0",
  "twilio~=7.17.0",
  "trogon~=0.4.0"
]
apprise = [
  "apprise~=1.3.0"
]
tui = [
  "trogon~=0.4.0"
]
twilio = [
  "twilio~=7.17.0"
]

[project.scripts]
camply = "camply.cli:cli"

[project.urls]
Changelog = "https://github.com/juftin/camply/releases"
Discussions = "https://github.com/juftin/camply/discussions"
Docker = "https://hub.docker.com/r/juftin/camply"
Documentation = "https://github.com/juftin/camply#readme"
Issues = "https://github.com/juftin/camply/issues"
Source = "https://github.com/juftin/camply"

[tool.coverage.paths]
camply = ["camply", "*/camply/camply"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:"
]

[tool.coverage.run]
branch = true
omit = ["camply/_version.py"]
parallel = true
source_pkgs = ["camply"]

[tool.hatch.env]
requires = ["hatch-pip-compile", "hatch-mkdocs"]

[tool.hatch.env.collectors.mkdocs.docs]
path = "mkdocs.yml"

[tool.hatch.envs.all]
pip-compile-constraint = ""
template = "test"

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.default]
features = ["all"]
pip-compile-constraint = "default"
post-install-commands = [
  "- pre-commit install"
]
type = "pip-compile"

[tool.hatch.envs.default.scripts]
cov = "hatch run test:cov"
test = "hatch run test:test"

[tool.hatch.envs.docs]
detached = false
pip-compile-constraint = "default"
template = "docs"
type = "pip-compile"

[tool.hatch.envs.gen]
detached = true

[tool.hatch.envs.gen.scripts]
release = [
  "npm install --prefix .github/semantic_release/",
  "npx --prefix .github/semantic_release/ semantic-release {args:}"
]

[tool.hatch.envs.lint]
dependencies = [
  "mypy>=1.6.1",
  "ruff~=0.1.7"
]
detached = true
type = "pip-compile"

[tool.hatch.envs.lint.scripts]
all = [
  "style",
  "typing"
]
fmt = [
  "ruff format {args:.}",
  "ruff --fix {args:.}",
  "style"
]
precommit = [
  "pre-commit run --all-files"
]
style = [
  "ruff {args:.}",
  "ruff format --check --diff {args:.}"
]
typing = "mypy --install-types --non-interactive {args:camply tests}"

[tool.hatch.envs.test]
dependencies = [
  "pytest~=7.3.1",
  "pytest-cov~=4.0.0",
  "pytest-mock~=3.10.0",
  "pytest-vcr~=1.0.2",
  "pytest-xdist~=3.2.1",
  "freezegun~=1.2.1"
]

[tool.hatch.envs.test.env-vars]
PUSHOVER_PUSH_TOKEN = "{env:PUSHOVER_PUSH_TOKEN:placeholder}"
PUSHOVER_PUSH_USER = "{env:PUSHOVER_PUSH_USER:placeholder}"

[tool.hatch.envs.test.scripts]
cov = "pytest -n auto --cov=camply --cov-report={env:COVERAGE_REPORT:term-missing} --cov-config=pyproject.toml {args:tests/ -v}"
test = "pytest {args:tests/ -v}"

[tool.hatch.version]
path = "camply/_version.py"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
follow_imports = "silent"
ignore_missing_imports = true
no_implicit_reexport = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
filterwarnings = [
  "error",
  "ignore::DeprecationWarning:pkg_resources",
  "ignore:The --rsyncdir command line argument and rsyncdirs config variable are deprecated.:DeprecationWarning",
  "ignore:datetime.datetime.utcfromtimestamp:DeprecationWarning:dateutil.tz.tz"
]

[tool.ruff]
ignore = [
  "E501",  # line too long
  "PLR0913",  # Too many arguments to function call
  "PLW2901",  # Outer for loop variable overwritten by inner assignment target
  "RUF012"  # Mutable class attributes should be annotated with `typing.ClassVar`
]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C",  # flake8-comprehensions
  "Q",  # flake8-quotes
  "B",  # flake8-bugbear
  "PLE",  # pylint
  "PLR",  # pylint
  "PLW",  # pylint
  "RUF",  # ruff
  "C90"  # mccabe
]
target-version = "py38"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.isort]
known-first-party = ["camply"]

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.ruff.pydocstyle]
convention = "numpy"
