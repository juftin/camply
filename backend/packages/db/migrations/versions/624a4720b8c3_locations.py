"""
locations

Revision ID: 624a4720b8c3
Revises: 067d9d721253
Create Date: 2025-08-08 04:50:51.636901+00:00
"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "624a4720b8c3"
down_revision: Union[str, Sequence[str], None] = "067d9d721253"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """
    Upgrade schema.
    """
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "recreation_areas",
        sa.Column("id", sa.String(length=128), nullable=False),
        sa.Column("provider_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=32768), nullable=True),
        sa.Column("country", sa.String(length=50), nullable=True),
        sa.Column("state", sa.String(length=50), nullable=True),
        sa.Column("longitude", sa.Float(), nullable=True),
        sa.Column("latitude", sa.Float(), nullable=True),
        sa.Column("reservable", sa.Boolean(), nullable=False),
        sa.Column("enabled", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["provider_id"],
            ["providers.id"],
        ),
        sa.PrimaryKeyConstraint("id", "provider_id"),
    )
    op.create_index(
        op.f("ix_recreation_areas_name"), "recreation_areas", ["name"], unique=False
    )
    op.create_table(
        "campgrounds",
        sa.Column("id", sa.String(length=128), nullable=False),
        sa.Column("provider_id", sa.Integer(), nullable=False),
        sa.Column("recreation_area_id", sa.String(length=128), nullable=True),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=32768), nullable=True),
        sa.Column("country", sa.String(length=50), nullable=True),
        sa.Column("state", sa.String(length=50), nullable=True),
        sa.Column("longitude", sa.Float(), nullable=True),
        sa.Column("latitude", sa.Float(), nullable=True),
        sa.Column("reservable", sa.Boolean(), nullable=False),
        sa.Column("enabled", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["provider_id"],
            ["providers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["recreation_area_id", "provider_id"],
            ["recreation_areas.id", "recreation_areas.provider_id"],
        ),
        sa.PrimaryKeyConstraint("id", "provider_id"),
    )
    op.create_index(op.f("ix_campgrounds_name"), "campgrounds", ["name"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """
    Downgrade schema.
    """
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_campgrounds_name"), table_name="campgrounds")
    op.drop_table("campgrounds")
    op.drop_index(op.f("ix_recreation_areas_name"), table_name="recreation_areas")
    op.drop_table("recreation_areas")
    # ### end Alembic commands ###
